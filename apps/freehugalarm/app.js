var images = [
  atob(
    "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"
  ),
  atob(
    "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"
  ),
];

function drawImg(i) {
  g.drawImage(
    {
      width: 100,
      height: 100,
      bpp: 8,
      buffer: require("heatshrink").decompress(images[i]),
    },
    0,
    0,
    { scale: 3 }
  );
}

var currImg = 0;
g.clear();
drawImg(currImg);
setInterval(function () {
  currImg = (currImg + 1) % images.length;
  drawImg(currImg);
}, 200);
